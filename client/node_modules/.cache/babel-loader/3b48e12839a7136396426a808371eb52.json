{"ast":null,"code":"var _jsxFileName = \"/Users/maddyhodges/Desktop/beaniebabies/client/src/pages/About.js\";\nimport React, { useState } from 'react';\nexport default function About() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"About\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"For the past few years I have wanted to learn React and GraphQL but I have been unmotivated by the boring To-do Apps and generic Movie DB Apps that many tutorials have you create.  I know the best way to learn a new tech is to create a project with it, so I wanted to create a project that I am genuinely interested in and that had a unique perspective.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"I was inspired to create this App by the twitter account \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://twitter.com/imbabybean\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 70\n    }\n  }, \"beanie babies i really like\"), \" which is literally someone tweeting some cool Beanie Babies. 10/10 content and I urge you to follow them. Once my brain's lil synapses started firing, I thought \\u201Chuh what data can I get for this? \\u201D. As collectables, Beanie Babies have a TON of data ranging from the info listed in their Tag to their size and theme. Since Beanie Babies are so rich in meta-data, creating an App that lets you explore them would be a unique challenge that really gets me to cut my teeth on React.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"I was excited by the idea of taking this project one step further and creating a GraphQL API like the \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://rickandmortyapi.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 115\n    }\n  }, \"Rick and Morty API\"), \" but better because it wouldn't be about Rick and Morty\\u2026 Anyway! My next step was to start gathering the data to populate this database. As I poked around the web, I was immediately brought back to the beauty of early 2000s web design from gems like \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://www.tycollector.com/beanies/beanie-roster.htm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 426\n    }\n  }, \"http://www.tycollector.com/beanies/beanie-roster.htm\"), \" . A beautiful aspect of these old sites is that they do not have complex URI structures or a large DOM tree. Essentially these sites were built for webscraping.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"After I had scrapped all the data I needed for this project, I let my motivation slip .Then one day in March I was looking at the Beanie Baby that sits at my desk, Scurry,  and noticed my bug friend was born on January 18th. I had missed his birthday \\uD83D\\uDE2D!!!\"), /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"(Insert image of scurry here)\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"I realized my life-long friend Scurry was also a Capricorn. As a Scorpio, I was shocked by our bond since we traditionally are not very compatible.\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \" And then it hit me ... they ALL have ZODIAC SIGNS!!!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"I realized my app could be truly unique since I could not only consolidate data already existing on the web but also provide this very important meta-data about the Beanie Babies\\u2019 Zodiac signs. No other website ( that I know of at least ) lets you search a Database of Beanie Babies, see their Zodiac Signs, and find what Beanie Babies you are most compatible with!\"));\n}","map":{"version":3,"sources":["/Users/maddyhodges/Desktop/beaniebabies/client/src/pages/About.js"],"names":["React","useState","About"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAGA,eAAe,SAASC,KAAT,GAAkB;AAEjC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yWAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAC6D;AAAG,IAAA,IAAI,EAAC,gCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAD7D,8eALJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4HAC0G;AAAG,IAAA,IAAI,EAAC,8BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAD1G,kRACia;AAAG,IAAA,IAAI,EAAC,sDAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADja,sKARJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kRAXJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAR,CAdJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2JAfJ,eAiBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAjBR,eAkBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0XAlBR,CADJ;AAuBC","sourcesContent":["import React, {useState} from 'react'\n\n\nexport default function About () {\n\nreturn(\n    <div>\n        <h1>About</h1>\n        <p>\n            For the past few years I have wanted to learn React and GraphQL but I have been unmotivated by the boring To-do Apps and generic Movie DB Apps that many tutorials have you create.  I know the best way to learn a new tech is to create a project with it, so I wanted to create a project that I am genuinely interested in and that had a unique perspective.\n        </p>\n        <p>\n            I was inspired to create this App by the twitter account <a href=\"https://twitter.com/imbabybean\">beanie babies i really like</a> which is literally someone tweeting some cool Beanie Babies. 10/10 content and I urge you to follow them. Once my brain's lil synapses started firing, I thought ‚Äúhuh what data can I get for this? ‚Äù. As collectables, Beanie Babies have a TON of data ranging from the info listed in their Tag to their size and theme. Since Beanie Babies are so rich in meta-data, creating an App that lets you explore them would be a unique challenge that really gets me to cut my teeth on React.\n        </p>\n        <p>\n            I was excited by the idea of taking this project one step further and creating a GraphQL API like the <a href=\"https://rickandmortyapi.com/\">Rick and Morty API</a> but better because it wouldn't be about Rick and Morty‚Ä¶ Anyway! My next step was to start gathering the data to populate this database. As I poked around the web, I was immediately brought back to the beauty of early 2000s web design from gems like <a href=\"http://www.tycollector.com/beanies/beanie-roster.htm\">http://www.tycollector.com/beanies/beanie-roster.htm</a> . A beautiful aspect of these old sites is that they do not have complex URI structures or a large DOM tree. Essentially these sites were built for webscraping.\n        </p>\n        <p>\n            After I had scrapped all the data I needed for this project, I let my motivation slip .Then one day in March I was looking at the Beanie Baby that sits at my desk, Scurry,  and noticed my bug friend was born on January 18th. I had missed his birthday üò≠!!!\n        </p>\n        <center><p>(Insert image of scurry here)</p></center>\n        <p>\n            I realized my life-long friend Scurry was also a Capricorn. As a Scorpio, I was shocked by our bond since we traditionally are not very compatible.</p>\n            <blockquote> And then it hit me ... they ALL have ZODIAC SIGNS!!!</blockquote> \n            <p>I realized my app could be truly unique since I could not only consolidate data already existing on the web but also provide this very important meta-data about the Beanie Babies‚Äô Zodiac signs. No other website ( that I know of at least ) lets you search a Database of Beanie Babies, see their Zodiac Signs, and find what Beanie Babies you are most compatible with!\n        </p>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}